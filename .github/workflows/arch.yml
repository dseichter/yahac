name: Build Arch Package

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v0.3.1-beta7)'
        required: false
        type: string

jobs:
  build-arch:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    
    steps:
      - name: Install dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel git python python-build python-installer python-wheel

      - name: Create build user
        run: |
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

      - name: Checkout
        uses: actions/checkout@v5

      - name: Update PKGBUILD version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            FULL_TAG="${{ github.event.inputs.version }}"
            echo "Using manual version: $FULL_TAG"
          else
            FULL_TAG=${GITHUB_REF#refs/tags/}
            echo "Using tag version: $FULL_TAG"
          fi
          VERSION=${FULL_TAG#v}
          echo "Version with suffix: $VERSION"
          NUMERIC_VERSION=$(echo "$VERSION" | sed 's/-[^0-9].*//' | sed 's/[^0-9.]//g')
          echo "Numeric version: $NUMERIC_VERSION"
          if [ -z "$NUMERIC_VERSION" ]; then
            echo "Error: NUMERIC_VERSION is empty"
            exit 1
          fi
          sed -i "s/pkgver=.*/pkgver=$NUMERIC_VERSION/" PKGBUILD
          sed -i "s|archive/v\$pkgver\.tar\.gz|archive/$FULL_TAG.tar.gz|" PKGBUILD
          sed -i "s/\$pkgname-\$pkgver/$pkgname-$VERSION/g" PKGBUILD
          cat PKGBUILD

      - name: Build package
        run: |
          chown -R builder:builder .
          sudo -u builder makepkg -sf --noconfirm

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: yahac-arch-${{ github.event.inputs.version || github.ref_name }}
          path: "*.pkg.tar.zst"

  release:
    needs: build-arch
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: "**/*.pkg.tar.zst"
          generate_release_notes: true